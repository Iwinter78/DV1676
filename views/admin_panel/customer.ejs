<%- include('../../public/admin-overview-header.ejs') %>

<div class="container mt-4">
  <div class="row justify-content-center">
    <div class="col-12 col-md-8 col-lg-8">
      <div class="table">
          <table class="table" style="max-width: 100%;">
              <thead>
                  <th scope="col">User ID</th>
                  <th scope="col">Name</th>
                  <th scope="col">Balance</th>
                  <th scope="col">Debt</th>
                  <th scope="col">Role</th>
                  <th scope="col">Action</th>
              </thead>
              <% for (const row of users) { %>
                <tr>
                    <td><%= row.id %></td>
                    <td><%= row.username %></td>
                    <td><%= row.email %></td>
                    <td><%= row.balance %></td>
                    <td><%= row.debt %></td>
                    <td><%= row.role %></td>
                    <td>
                      <form class="editUserForm" action="/editUser/<%= row.username %>" method="POST">
                        <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#confirmEditModal<%= row.username %>">
                          Edit
                        </button>
                      </form>

                      <div class="modal fade" id="confirmEditModal<%= row.username %>" tabindex="-1" aria-labelledby="confirmEditModalLabel<%= row.username %>" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="confirmDeleteModalLabel<%= row.username %>">Edit User</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                  <div class="mb-3">
                                      <label for="id<%= row.username %>" class="form-label">ID:</label>
                                      <input type="text" class="form-control-plaintext" id="id<%= row.username %>" value="<%= row.id %>" readonly>
                                  </div>
                                  <div class="mb-3">
                                      <label for="username<%= row.username %>" class="form-label">Username:</label>
                                      <input type="text" class="form-control-plaintext" id="username<%= row.username %>" value="<%= row.username %>" readonly>
                                  </div>
                                  <div class="mb-3">
                                      <label for="email<%= row.username %>" class="form-label">Email:</label>
                                      <input type="text" class="form-control-plaintext" id="email<%= row.username %>" value="<%= row.email %>" readonly>
                                  </div>
                                  <div class="mb-3">
                                      <label for="role<%= row.username %>" class="form-label">Role:</label>
                                      <input type="text" class="form-control-plaintext" id="role<%= row.username %>" value="<%= row.role %>" readonly>
                                  </div>
                                  
                                  <!-- Bara de två som går att ändra -->
                                  <div class="mb-3">
                                      <label for="balance<%= row.username %>" class="form-label">Balance:</label>
                                      <input type="text" class="form-control" id="balance<%= row.username %>" name="balance" value="<%= row.balance %>">
                                  </div>
                                  <div class="mb-3">
                                      <label for="debt<%= row.username %>" class="form-label">Debt:</label>
                                      <input type="text" class="form-control" id="debt<%= row.username %>" name="debt" value="<%= row.debt %>">
                                  </div>
                                </div>

                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                    <button type="button" class="btn btn-primary confirmEditButton" data-username="<%= row.username %>">Confirm</button>
                                </div>
                            </div>
                        </div>
                      </div>
                    </td>
                    <td>
                      <form class="deleteUserForm" action="/deleteUser/<%= row.username %>" method="POST">
                        <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal<%= row.username %>">
                            Delete
                        </button>
                      </form>

                      <div class="modal fade" id="confirmDeleteModal<%= row.username %>" tabindex="-1" aria-labelledby="confirmDeleteModalLabel<%= row.username %>" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="confirmDeleteModalLabel<%= row.username %>">Confirm Deletion</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    Are you sure you want to delete this user?
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                    <button type="button" class="btn btn-danger confirmDeleteButton" data-username="<%= row.username %>">Delete</button>
                                </div>
                            </div>
                        </div>
                      </div>
                    </td>
                </tr>
              <% } %>

            </table>
      </div>
    </div>
  </div>
</div> 

<script>
    document.querySelectorAll('.deleteUserForm').forEach((form) => {
        form.addEventListener('submit', function (event) {
            event.preventDefault(); // Prevent form from submitting instantly
        });
    });

    document.querySelectorAll('.confirmDeleteButton').forEach((button) => {
        button.addEventListener('click', function () {
            const username = button.getAttribute('data-username');
            const form = document.querySelector(`.deleteUserForm[action='/deleteUser/${username}']`);
            form.submit(); // Submit the form
        });
    });

    document.querySelectorAll('.editUserForm').forEach((form) => {
        form.addEventListener('submit', function (event) {
            event.preventDefault();
        });
    });

    // Confirm and submit edit form with updated values
    document.querySelectorAll('.confirmEditButton').forEach((button) => {
    button.addEventListener('click', async function () {
        console.log("Edit button clicked");  // Check if this gets logged when clicked
        
        const username = button.getAttribute('data-username');
        const balance = document.getElementById(`balance${username}`).value;
        const debt = document.getElementById(`debt${username}`).value;

        console.log("Username:", username);
        console.log("Balance:", balance);
        console.log("Debt:", debt);


        console.log(JSON.stringify({balance: balance, debt: debt}));

        await fetch(`/editUser/${username}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                  balance: balance,
                  debt: debt })
            })
        
            .then(response => {
                return Promise.resolve(response);
            })

            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while updating balance/debt.');
            });
            console.log("After first fetch")
            location.reload();
    });
});

</script>